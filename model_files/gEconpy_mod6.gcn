options
{
    output logfile = FALSE;
    output LaTeX = FALSE;
};

tryreduce
{
   U[], TC[] ;
};

block HOUSEHOLD
{
    definitions
    {
        u[] = C[] ^ (1 - sigma_C) / (1 - sigma_C) - Ls[] ^ (1 + sigma_L) / (1 + sigma_L);
    };

    controls
    {
        C[], Ls[], I[], Ks[];
    };

    objective
    {
        U[] = u[] + beta * E[][U[1]];
    };

    constraints
    {
        P[] * (C[] + I[]) = r[] * Ks[-1] + w[] * Ls[] + Pi[] : lambda[];
        Ks[] = (1 - delta) * Ks[-1] + I[] : q[];
    };

    identities
    {
        Q[] = q[] / lambda[] ;                                  # Tobin's q
    };

    calibration
    {
        beta = 0.985;
        delta = 0.02;
        sigma_C = 2;
        sigma_L = 1.5;
    };
};

block FIRM
{
    controls
    {
        Kd[], Ld[];
    };

    objective
    {
        TC[] = -(r[] * Kd[] + w[] * Ld[]);
    };

    constraints
    {
        Y[] = A[] * Kd[] ^ alpha * Ld[] ^ (1 - alpha) : mc[];
    };

    calibration
    {
        alpha = 0.35;
    };
};

block TECHNOLOGY_SHOCKS
{
    identities
    {
        log(A[]) = rho_A * log(A[-1]) + epsilon_A[];
    };

    shocks
    {
        epsilon_A[] ~ N(mean=0, sd=sigma_epsilon);
    };

    calibration
    {
        rho_A ~ Beta(mean=0.95, sd=0.04) = 0.95;
        sigma_epsilon ~ Inv_Gamma(mean=0.1, sd=0.01) = 0.01;
    };
};

block PRICE_SETTING
# obtain P_hat, the optimal price at pricing signal
{
    identities
    {

        g1[] = mc[] + (beta * Theta) * E[][g1[1]] ;

        P_hat[] = (psi / (psi - 1)) * g1[] ;
        
        P[] = (Theta  * P[-1] ^ (1 - psi) + (1 - Theta) * P_hat[] ^ (1 - psi)) ^ (1 / (1 - psi)) ;

        pi[] = P[] / P[-1] ;
    };

    calibration
    {
        Theta = .75 ;         # Calvo pricing probability
        psi = 8 ;
    };   

};

block EQUILIBRIUM
{
    identities
    {
        Y[] = I[] + C[] ; 
        Kd[] = Ks[] ;
        Ld[] = Ls[] ;
        Pi[] = Y[] - TC[] ;
    };  

};