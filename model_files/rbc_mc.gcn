# ############################################################################
# (c) Chancellery of the Prime Minister 2012-2015                            #
#                                                                            #
# Authors: Grzegorz Klima, Karol Podemski, Kaja Retkiewicz-Wijtiwiak         #
# ############################################################################
# RBC model with monopolistic competition
# ############################################################################

options
{
    output logfile = TRUE;
    output LaTeX = TRUE;
    output LaTeX landscape = TRUE;
};

tryreduce
{
    L_d[], P_FIN[], Y_MON[], Y_FIN[], lambda_U[], lambda_c[];
};

block CONSUMER
{
    definitions
    {
        u[] = (C[]^mu * (1 - L_s[])^(1 - mu))^(1 - eta) / (1 - eta);
    };
    controls
    {
        C[], L_s[];
    };
    objective
    {
        U[] = u[] + beta * E[][U[1]]    : lambda_U[];
    };
    constraints
    {
        P_FIN[] * C[] = pi[] + pi_ps[] + W[] * L_s[]    : lambda_c[];
    };
    calibration
    {
        beta = 0.99;
        eta = 2;
        mu = 0.3;
    };
};

block INTERMEDIATE_FIRM
{
    controls
    {
        K[], L_d[], Y[], I[], pi[];
    };
    objective
    {
        PI[] = pi[] + E[][lambda_U[1] * lambda_c[1] / lambda_c[] * PI[1]];
    };
    constraints
    {
        pi[] = P[] * Y[] - L_d[] * W[] - I[];
        Y[] = K[-1]^alpha * (Z[] * L_d[])^(1 - alpha);
        K[] = (1 - delta) * K[-1] + I[];
    };
    calibration
    {
        alpha = 0.33;
        delta = 0.025;
    };
};

block PRICE_SETTING
{
    controls
    {
        pi_ps[], Y_MON[], P_MON[];
    };
    objective
    {
        PI_PS[] = pi_ps[];
    };
    constraints
    {
        pi_ps[] = (P_MON[] - P[]) * Y_MON[];
        Y_MON[] = Y_FIN[] * (P_MON[] / P_FIN[])^(-rho);
    };
    calibration
    {
        rho = 11;
    };
};

block FINAL_FIRM
{
    identities
    {
        Y_FIN[] = Y_MON[];
    };
};

block EQUILIBRIUM
{
    identities
    {
        L_d[] = L_s[];
        P_FIN[] = 1;
        Y_MON[] = Y[];
    };
};

block EXOG 
{
    identities
    {
        Z[] = exp(phi * log(Z[-1]) + epsilon_Z[]);
    };
    shocks
    {
        epsilon_Z[];
    };
    calibration
    {
        phi = 0.95;
    };
};
