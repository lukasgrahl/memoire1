

block TECHNOLOGY_SHOCKS
{
    identities
    {
        log(A[]) = rho_A * log(A[-1]) + epsilon_A[];
    };

    shocks
    {
        epsilon_A[];
    };

    calibration
    {
        rho_A = 0.95;
    };
};

block HOUSEHOLD
{
    definitions
    {
        u[] = C[] ^ (1 - sigma_C) / (1 - sigma_C) - L[] ^ (1 + sigma_L) / (1 + sigma_L);
    };

    controls
    {
        C[], L[], I[], K[];
    };

    objective
    {
        U[] = u[] + beta * E[][U[1]];
    };

    constraints
    {
        P[] * (C[] + I[]) + B[1] * (1 / R_b[]) = B[] + R[] * K[-1] + W[] * L[] + Pi[] : lambda[];
        K[] = (1 - delta) * K[-1] + I[] : q[];
    };

    identities
    {
        Q[] = q[] / lambda[] ;                                  # Tobin's q
    };

    calibration
    {
        beta = 0.985;
        delta = 0.02;
        sigma_C = 2;
        sigma_L = 1.5;
    };
};

block FIRM
{
    controls
    {
        K[-1], L[];
    };

    objective
    {
        TC[] = -(R[] * K[-1] + W[] * L[]);
    };

    constraints
    {
        Y[] = A[] * K[-1] ^ alpha * L[] ^ (1 - alpha) : MC[];
    };

    calibration
    {
        alpha = 0.35;
    };
};


block PRICE_SETTING
{
    identities
    {

        g1[] = MC[] + (beta * Theta) * E[][g1[1]] ;
        P_hat[] = (psi / (psi - 1)) * g1[] ;
        
        P[] = (Theta  * P[-1] ^ (1 - psi) + (1 - Theta) * P_hat[] ^ (1 - psi)) ^ (1 / (1 - psi)) ;
        pi[] = P[] / P[-1] ;
    };

    calibration
    {
        Theta = .75 ;         # Calvo pricing probability
        psi = 8 ;
    };   

};

block GOVERNMENT
{
    identities
    {
        B[1] / R_b[] = B[] ;
    };  
};

block TAYLOR_RULE
{
    identities
    {
        R_b[] / R_b[ss] = (R_b[-1] / R_b[ss]) ^ gamma_r + ((pi[] / pi[ss]) ^ gamma_pi + (Y[] / Y[ss]) ^ gamma_y) ^ (1 - gamma_r) ;
    };

    calibration 
    {
        gamma_r = .79 ;
        gamma_pi = 2.34 ;
        gamma_y = .16 ;
    };
};

block EQUILIBRIUM
{
    identities
    {
        Y[] = I[] + C[] ; 
        Pi[] = (Y[] - TC[]) ;
#        R_b[ss] = 1 / beta ;
    };  

};